Starting audit...
[ERROR] /home/student/santaclaus-acs-part1/./src/utils/Utils.java:7:1: Class Utils should be declared as final. [FinalClass]
[ERROR] /home/student/santaclaus-acs-part1/./src/main/Main.java:4:8: Unused import - checker.Checkstyle. [UnusedImports]
[ERROR] /home/student/santaclaus-acs-part1/./src/main/Main.java:10:8: Unused import - org.json.simple.JSONArray. [UnusedImports]
[ERROR] /home/student/santaclaus-acs-part1/./src/main/Main.java:40:56: '10' is a magic number. [MagicNumber]
[ERROR] /home/student/santaclaus-acs-part1/./src/main/Main.java:48:15: Comment matches to-do format 'TODO:'. [TodoComment]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:19:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getAnnualChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getAnnualChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:23:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getSantasBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getSantasBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:27:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getInitialData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getInitialData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:31:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'getNoYears' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'getNoYears' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:35:5: Class 'Input' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Input' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:37:25: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:38:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:39:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:40:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/Input.java:41:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:16:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getProductName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getProductName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:20:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getPrice' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getPrice' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:24:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'getCategory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'getCategory' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:28:5: Class 'GiftInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GiftInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:30:29: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:31:54: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:32:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/GiftInput.java:33:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:16:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'getChildrenList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'getChildrenList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:20:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'getGiftsList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'getGiftsList' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:24:5: Class 'InitialDataInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InitialDataInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:26:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:27:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InitialDataInput.java:28:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:17:48: '{' at column 48 should have line break after. [LeftCurly]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:19:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'getInputPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'getInputPath' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:23:5: Class 'InputLoader' looks like designed for extension (can be subclassed), but the method 'readData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputLoader' final or making the method 'readData' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:23:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:51: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:52: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:77: Line is longer than 100 characters (found 123). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:79: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:80: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:85: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:97: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:98: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:105: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:107: Line is longer than 100 characters (found 129). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:111: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:112: Line is longer than 100 characters (found 114). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:113: Line is longer than 100 characters (found 125). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/InputLoader.java:118: Line is longer than 100 characters (found 103). [LineLength]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/AnnualChangesInput.java:8:31: Parameter changes should be final. [FinalParameters]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/AnnualChangesInput.java:12:5: Class 'AnnualChangesInput' looks like designed for extension (can be subclassed), but the method 'getChanges' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInput' final or making the method 'getChanges' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/AnnualChangesInput.java:16:5: Class 'AnnualChangesInput' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AnnualChangesInput' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/AnnualChangesInput.java:18:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/AnnualChangesInput.java:19:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:60:33: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:61:28: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:62:50: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:63:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:64:32: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:65:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:66:44: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenInput.java:67:58: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenUpdatesInput.java:18:5: Class 'ChildrenUpdatesInput' looks like designed for extension (can be subclassed), but the method 'getGiftsPreferences' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdatesInput' final or making the method 'getGiftsPreferences' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenUpdatesInput.java:22:5: Class 'ChildrenUpdatesInput' looks like designed for extension (can be subclassed), but the method 'getNiceScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdatesInput' final or making the method 'getNiceScore' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChildrenUpdatesInput.java:26:5: Class 'ChildrenUpdatesInput' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChildrenUpdatesInput' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:22:5: Class 'ChangeOfTheYear' looks like designed for extension (can be subclassed), but the method 'getNewSantaBudget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeOfTheYear' final or making the method 'getNewSantaBudget' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:26:5: Class 'ChangeOfTheYear' looks like designed for extension (can be subclassed), but the method 'getNewChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeOfTheYear' final or making the method 'getNewChildren' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:30:5: Class 'ChangeOfTheYear' looks like designed for extension (can be subclassed), but the method 'getNewUpdates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeOfTheYear' final or making the method 'getNewUpdates' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:34:5: Class 'ChangeOfTheYear' looks like designed for extension (can be subclassed), but the method 'getNewGifts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeOfTheYear' final or making the method 'getNewGifts' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:38:5: Class 'ChangeOfTheYear' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangeOfTheYear' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:40:35: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:41:52: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:42:42: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:43:48: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/student/santaclaus-acs-part1/./src/fileio/ChangeOfTheYear.java:44:46: '+' should be on a new line. [OperatorWrap]
Audit done.
Checkstyle ends with 74 errors.
